#!/usr/bin/env python3
# SPDX-License-Identifier: Apache-2.0
# Copyright(c) 2025 Liu, Changcheng <changcheng.liu@aliyun.com>

from scapy.all import Ether, Raw, sendp

# Define MAC addresses and EtherType
dst_mac = "e8:eb:d3:98:2e:5c"  # dst mac address
src_mac = "e8:eb:d3:98:2f:5c"  # src mac address
eth_type = 0x0800              # EtherType for IPv4

# Eth layer2 payload to construct RoCEv2 frame with bad iCRC
# Note: change manually to adapt to the test scenario
payload=bytes([0x45, 0x02, 0x00, 0x74, 0x00, 0x18, 0x40, 0x00, 0xff, 0x11, 0x1b, 0xee, 0xc0, 0xa8, 0x6f, 0x0f, 0xc0, 0xa8, 0x6f, 0x10, 0xdb, 0xb9, 0x12, 0xb7, 0x00, 0x60, 0x00, 0x00,
               0x64, 0x40, 0xff, 0xff, 0x00,
               0x00, 0x12, 0xa4, #dst qp
               0x00,
               0x7c, 0xd9, 0x9f, # psn
               0x11, 0x11, 0x11, 0x11, 0x00,
               0x00, 0x12, 0xa3, # src qp
               0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
               0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
               0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
               0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
               0x86, 0x0f, 0x82, 0x75 #icrc
               ])

# Create the Ethernet frame
eth_frame = Ether(dst=dst_mac, src=src_mac, type=eth_type) / Raw(load=payload)
eth_frame_bytes = bytes(eth_frame)

# Send the frame
sendp(eth_frame_bytes, iface="enp23s0f0np0", verbose=True)
